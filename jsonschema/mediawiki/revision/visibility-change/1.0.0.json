{
  "title": "mediawiki/revision/visibility-change",
  "description": "Represents a MW Revision Visibiilty Change event.",
  "$id": "/mediawiki/revision/visibility-change/1.0.0",
  "$schema": "https://json-schema.org/draft-07/schema#",
  "type": "object",
  "required": [
    "$schema",
    "database",
    "meta",
    "page_id",
    "page_is_redirect",
    "page_namespace",
    "page_title",
    "prior_state",
    "rev_id",
    "rev_timestamp",
    "visibility"
  ],
  "properties": {
    "$schema": {
      "type": "string",
      "description": "The URI identifying the jsonschema for this event. This should be a short uri containing only the name and revision at the end of the URI path.  e.g. /schema_name/1.0.0 is acceptable. This often will (and should) match the schema's $id field.\n"
    },
    "meta": {
      "type": "object",
      "required": [
        "id",
        "dt",
        "stream"
      ],
      "properties": {
        "uri": {
          "type": "string",
          "format": "uri-reference",
          "maxLength": 8192,
          "description": "Unique URI identifying the event / resource"
        },
        "request_id": {
          "type": "string",
          "description": "Unique ID of the request that caused the event"
        },
        "id": {
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}(-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "description": "Unique ID of this event"
        },
        "dt": {
          "type": "string",
          "format": "date-time",
          "maxLength": 128,
          "description": "Time stamp of the event, in ISO-8601 format"
        },
        "domain": {
          "type": "string",
          "description": "Domain the event pertains to",
          "minLength": 1
        },
        "stream": {
          "type": "string",
          "description": "Name of the stream/queue that this event belongs in",
          "minLength": 1
        }
      }
    },
    "database": {
      "description": "The name of the wiki database this event belongs to.",
      "type": "string",
      "minLength": 1
    },
    "performer": {
      "description": "Represents the user that performed this change.",
      "type": "object",
      "required": [
        "user_text",
        "user_groups",
        "user_is_bot"
      ],
      "properties": {
        "user_id": {
          "description": "The user id that performed this change.  This is optional, and will not be present for anonymous users.\n",
          "type": "integer"
        },
        "user_text": {
          "description": "The text representation of the user that performed this change.",
          "type": "string",
          "minLength": 1
        },
        "user_groups": {
          "description": "A list of the groups this user belongs to.  E.g. bot, sysop etc.",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "user_is_bot": {
          "description": "True if this user is considered to be a bot.  This is checked via the $user->isBot() method, which considers both user_groups and user permissions.\n",
          "type": "boolean"
        },
        "user_registration_dt": {
          "description": "The datetime of the user account registration. Not present for anonymous users or if missing in the MW database.\n",
          "type": "string",
          "format": "date-time",
          "maxLength": 128
        },
        "user_edit_count": {
          "description": "The number of edits this user has made at the time this revision is created. Not present for anonymous users.\n",
          "type": "integer",
          "minimum": 0
        }
      }
    },
    "page_id": {
      "description": "The page ID of the page this revision belongs to.",
      "type": "integer",
      "minimum": 1
    },
    "page_title": {
      "description": "The normalized title of the page this revision belongs to.",
      "type": "string",
      "minLength": 1
    },
    "page_namespace": {
      "description": "The namespace of the page this revision belongs to.",
      "type": "integer"
    },
    "page_is_redirect": {
      "description": "True if this revision is a redirect.  This fact is ultimately represented by revision content containing redirect wikitext.  If this revision is the head revision of the page, then the page will also be a redirect.\n",
      "type": "boolean"
    },
    "rev_id": {
      "description": "The revision ID created by this event",
      "type": "integer",
      "minimum": 0
    },
    "rev_parent_id": {
      "description": "The parent revision of the revision that this event affects.",
      "type": "integer",
      "minimum": 0
    },
    "rev_timestamp": {
      "description": "The revision's creation time in ISO8601 format.  This field does not end in '_dt' to better match the field name on the Mediawiki revision table.\n",
      "type": "string",
      "format": "date-time",
      "maxLength": 128
    },
    "chronology_id": {
      "description": "Chonology Protector client ID.",
      "type": "string"
    },
    "comment": {
      "description": "The comment left by the user that performed this change.",
      "type": "string"
    },
    "parsedcomment": {
      "description": "The comment left by the user that performed this change parsed into simple HTML. Optional\n",
      "type": "string"
    },
    "rev_sha1": {
      "description": "The sha1 of the revision text.",
      "type": "string"
    },
    "rev_len": {
      "description": "The length of the revision text in bytes.",
      "type": "integer"
    },
    "rev_minor_edit": {
      "description": "Flag identifying if the revision is minor.",
      "type": "boolean"
    },
    "rev_content_model": {
      "description": "The content model of the revision.",
      "type": "string"
    },
    "rev_content_format": {
      "description": "The content format of the revision.",
      "type": "string"
    },
    "visibility": {
      "description": "The visiblity state of this revision.",
      "type": "object",
      "required": [
        "text",
        "user",
        "comment"
      ],
      "properties": {
        "text": {
          "description": "Whether the revision's text is visible.",
          "type": "boolean"
        },
        "user": {
          "description": "Whether the author of the revision's text is visible.",
          "type": "boolean"
        },
        "comment": {
          "description": "Whether the comment of the revision is visible.",
          "type": "boolean"
        }
      }
    },
    "prior_state": {
      "description": "The prior state of the entity before this event.  Revisions always have visibility settings, so this object will always contain the visibility settings for the revision before this event.\n",
      "type": "object",
      "properties": {
        "visibility": {
          "description": "The prior visiblity state of this revision.",
          "type": "object",
          "required": [
            "text",
            "user",
            "comment"
          ],
          "properties": {
            "text": {
              "type": "boolean"
            },
            "user": {
              "type": "boolean"
            },
            "comment": {
              "type": "boolean"
            }
          }
        }
      }
    }
  }
}