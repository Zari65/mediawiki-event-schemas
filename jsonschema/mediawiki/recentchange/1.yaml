title: mediawiki/recentchange
description: >
  Represents a MW RecentChange event.
  https://www.mediawiki.org/wiki/Manual:RCFeed
$schema: http://json-schema.org/draft-04/schema#
type: object
properties:
  ### Meta data object.  All events schemas should have this.
  meta:
    type: object
    properties:
      topic:
        description: The queue topic name this message belongs to.
        type: string
      schema_uri:
        description: >
          The URI identifying the jsonschema for this event.  This may be just
          a short uri containing only the name and revision at the end of the
          URI path.  e.g. schema_name/12345 is acceptable.  This field
          is not required.
        type: string
      uri:
        description: The unique URI identifying the event.
        type: string
        format: uri
      request_id:
        description: The unique UUID v1 ID of the event derived from the X-Request-Id header.
        type: string
        pattern: '^[a-fA-F0-9]{8}(-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}$'
      id:
        description: The unique ID of this event; should match the dt field.
        type: string
        pattern: '^[a-fA-F0-9]{8}(-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}$'
      dt:
        description: The time stamp of the event, in ISO8601 format.
        type: string
        format: date-time
      domain:
        description: The domain the event pertains to.
        type: string
    required:
      - topic
      - uri
      - id
      - dt
      - domain

  ### Fields common to all recentchange events
  id:
    description: ID of the recentchange event (rcid).
    type: [integer, "null"]

  type:
    description: >
      Type of recentchange event (rc_type). One of "edit", "new", "log",
      "categorize", or "external". (See Manual:Recentchanges table#rc_type)
    type: string

  title:
    description: Full page name, from Title::getPrefixedText.
    type: string

  namespace:
    description: >
      ID of relevant namespace of affected page (rc_namespace, page_namespace).
      This is -1 ("Special") for log events.
    type: integer

  comment:
    description: (rc_comment)
    type: string

  timestamp:
    description: Unix timestamp (derived from rc_timestamp).
    type: integer

  user:
    description: (rc_user_text)
    type: string

  bot:
    description: (rc_bot)
    type: boolean

  server_url:
    description: $wgCanonicalServer
    type: string

  server_name:
    description: $wgServerName
    type: string

  server_script_path:
    description: $wgScriptPath
    type: string

  wiki:
    description: wfWikiID ($wgDBprefix, $wgDBname)
    type: string


  ### Edit event related fields
  minor:
    description: (rc_minor).
    type: boolean

  patrolled:
    description: >
      (rc_patrolled). This property only exists if patrolling is supported
      for this event (based on $wgUseRCPatrol, $wgUseNPPatrol).
    type: boolean

  length:
    description: Length of old and new change
    type: object
    properties:
      old:
        description: (rc_old_len)
        type: [integer, "null"]
      new:
        description: (rc_new_len)
        type: [integer, "null"]

  revision:
    description: Old and new revision IDs
    type: object
    properties:
      new:
        description: (rc_last_oldid)
        type: [integer, "null"]
      old:
        description: (rc_this_oldid)
        type: [integer, "null"]


  ### Log event related fields
  log_id:
    description: (rc_log_id)
    type: [integer, "null"]

  log_type:
    description: (rc_log_type)
    type: [string, "null"]

  log_action:
    description: (rc_log_action)
    type: string

  log_params:
    description: Property only exists if event has rc_params.
    type: [array, object, string]
    additionalProperties: true

  log_action_comment:
    type: [string, "null"]

# Since recentchanges has existed before we began enforcing real JSON schemas,
# we do not require any fields (other than meta), and do not invalidate if additional
# properties are added.  This means that almost any schema (with a meta object) will
# validate, but it allows us to be flexible and backwards compatible with unknown edge cases
# where a recentchange event might look different than officially documented
# at https://www.mediawiki.org/wiki/Manual:RCFeed.
additionalProperties: true

required:
  - meta